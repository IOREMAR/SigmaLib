/**
 * This class is generated by jOOQ
 */
package sigma.dbgen.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import sigma.dbgen.DefaultSchema;
import sigma.dbgen.Keys;
import sigma.dbgen.tables.records.TransaccionesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transacciones extends TableImpl<TransaccionesRecord> {

	private static final long serialVersionUID = 1395372117;

	/**
	 * The reference instance of <code>transacciones</code>
	 */
	public static final Transacciones TRANSACCIONES = new Transacciones();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TransaccionesRecord> getRecordType() {
		return TransaccionesRecord.class;
	}

	/**
	 * The column <code>transacciones.id</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>transacciones.fecha</code>.
	 */
	public final TableField<TransaccionesRecord, Long> FECHA = createField("fecha", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>transacciones.codigooper</code>.
	 */
	public final TableField<TransaccionesRecord, String> CODIGOOPER = createField("codigooper", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>transacciones.procod</code>.
	 */
	public final TableField<TransaccionesRecord, String> PROCOD = createField("procod", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.descmenu</code>.
	 */
	public final TableField<TransaccionesRecord, String> DESCMENU = createField("descmenu", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.importe</code>.
	 */
	public final TableField<TransaccionesRecord, String> IMPORTE = createField("importe", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.moneda</code>.
	 */
	public final TableField<TransaccionesRecord, String> MONEDA = createField("moneda", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.importeorigen</code>.
	 */
	public final TableField<TransaccionesRecord, String> IMPORTEORIGEN = createField("importeorigen", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.fee</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> FEE = createField("fee", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>transacciones.reflocal</code>.
	 */
	public final TableField<TransaccionesRecord, String> REFLOCAL = createField("reflocal", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.stan</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> STAN = createField("stan", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>transacciones.refremota</code>.
	 */
	public final TableField<TransaccionesRecord, String> REFREMOTA = createField("refremota", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.refcliente</code>.
	 */
	public final TableField<TransaccionesRecord, String> REFCLIENTE = createField("refcliente", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.descproducto</code>.
	 */
	public final TableField<TransaccionesRecord, String> DESCPRODUCTO = createField("descproducto", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.turno</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> TURNO = createField("turno", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>transacciones.contabilizar</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> CONTABILIZAR = createField("contabilizar", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>transacciones.zincronizada</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> ZINCRONIZADA = createField("zincronizada", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>transacciones.cuenta</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> CUENTA = createField("cuenta", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>transacciones.dia</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> DIA = createField("dia", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>transacciones.total</code>.
	 */
	public final TableField<TransaccionesRecord, String> TOTAL = createField("total", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>transacciones.cashback</code>.
	 */
	public final TableField<TransaccionesRecord, Float> CASHBACK = createField("cashback", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * The column <code>transacciones.impuesto</code>.
	 */
	public final TableField<TransaccionesRecord, Float> IMPUESTO = createField("impuesto", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * The column <code>transacciones.propina</code>.
	 */
	public final TableField<TransaccionesRecord, Float> PROPINA = createField("propina", org.jooq.impl.SQLDataType.REAL, this, "");

	/**
	 * The column <code>transacciones.tipo_tarjeta</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> TIPO_TARJETA = createField("tipo_tarjeta", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>transacciones.medio_pago</code>.
	 */
	public final TableField<TransaccionesRecord, Integer> MEDIO_PAGO = createField("medio_pago", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>transacciones</code> table reference
	 */
	public Transacciones() {
		this("transacciones", null);
	}

	/**
	 * Create an aliased <code>transacciones</code> table reference
	 */
	public Transacciones(String alias) {
		this(alias, TRANSACCIONES);
	}

	private Transacciones(String alias, Table<TransaccionesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Transacciones(String alias, Table<TransaccionesRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TransaccionesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TRANSACCIONES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TransaccionesRecord> getPrimaryKey() {
		return Keys.PK_TRANSACCIONES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TransaccionesRecord>> getKeys() {
		return Arrays.<UniqueKey<TransaccionesRecord>>asList(Keys.PK_TRANSACCIONES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Transacciones as(String alias) {
		return new Transacciones(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Transacciones rename(String name) {
		return new Transacciones(name, null);
	}
}
